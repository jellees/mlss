	.include "asm/macros.inc"

	.syntax unified
	.text

	thumb_func_start opdr_update2
opdr_update2:
	push {r4, r5, r6, r7, lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5, r6, r7}
	add sp, #-0x004
	adds r7, r0, #0x0
	ldr r4, [r7, #0x14]
	bl sub_8020A78
	ldr r0, _080572B0 @ =0x0300034C
	movs r1, #0x88
	lsls r1, r1, #0x04
	adds r0, r0, r1
	ldr r0, [r0, #0x00]
	mov r10, r0
	adds r4, #0xDC
	ldr r2, [r4, #0x00]
	adds r0, r2, #0x0
	adds r0, #0x21
	ldrb r0, [r0, #0x00]
	subs r0, #0x03
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x02
	bhi _08057274
	ldr r3, _080572B4 @ =0x0203FFB8
	ldr r5, [r3, #0x38]
	ldr r1, _080572B8 @ =0x083A75B8
	adds r0, r2, #0x0
	adds r0, #0x22
	ldrb r0, [r0, #0x00]
	subs r0, #0x0A
	lsls r0, r0, #0x01
	adds r0, r0, r1
	movs r3, #0x00
	str r4, [sp, #0x000]
	movs r6, #0x22
	adds r6, r6, r7
	mov r9, r6
	movs r1, #0x00
	ldsh r0, [r0, r1]
	adds r6, r0, #0x0
	subs r6, #0x22
	mov r8, r3
	movs r2, #0x2B
	adds r4, r7, #0x0
	adds r4, #0x1C
	movs r0, #0x90
	lsls r0, r0, #0x06
	mov r12, r0
	movs r7, #0x80
	lsls r7, r7, #0x17
_080571CA:
	strh r6, [r5, #0x00]
	strh r2, [r5, #0x02]
	adds r0, r4, r3
	ldrb r0, [r0, #0x00]
	adds r0, #0x2C
	mov r1, r12
	orrs r0, r1
	strh r0, [r5, #0x04]
	mov r0, r8
	strh r0, [r5, #0x06]
	str r7, [r5, #0x08]
	ldr r5, [r5, #0x10]
	adds r1, r2, #0x7
	adds r0, r3, #0x1
	strh r6, [r5, #0x00]
	strh r1, [r5, #0x02]
	adds r0, r4, r0
	ldrb r0, [r0, #0x00]
	adds r0, #0x2C
	mov r1, r12
	orrs r0, r1
	strh r0, [r5, #0x04]
	mov r0, r8
	strh r0, [r5, #0x06]
	str r7, [r5, #0x08]
	ldr r5, [r5, #0x10]
	adds r1, r2, #0x0
	adds r1, #0x0E
	adds r0, r3, #0x2
	strh r6, [r5, #0x00]
	strh r1, [r5, #0x02]
	adds r0, r4, r0
	ldrb r0, [r0, #0x00]
	adds r0, #0x2C
	mov r1, r12
	orrs r0, r1
	strh r0, [r5, #0x04]
	mov r0, r8
	strh r0, [r5, #0x06]
	str r7, [r5, #0x08]
	ldr r5, [r5, #0x10]
	adds r2, #0x15
	adds r3, #0x03
	cmp r3, #0x05
	ble _080571CA
	movs r4, #0x00
	ldr r1, [sp, #0x000]
	ldr r0, [r1, #0x00]
	adds r0, #0x22
	ldrb r0, [r0, #0x00]
	subs r0, #0x0A
	lsls r0, r0, #0x01
	ldr r2, _080572BC @ =0x083A75C8
	adds r0, r0, r2
	movs r3, #0x00
	ldsh r1, [r0, r3]
	subs r1, #0x15
	movs r0, #0x40
	movs r6, #0x90
	lsls r6, r6, #0x06
	adds r2, r6, #0x0
	movs r3, #0x80
	lsls r3, r3, #0x17
	strh r1, [r5, #0x00]
	strh r0, [r5, #0x02]
	mov r6, r9
	ldrb r0, [r6, #0x00]
	adds r0, #0x2C
	orrs r0, r2
	strh r0, [r5, #0x04]
	strh r4, [r5, #0x06]
	str r3, [r5, #0x08]
	ldr r5, [r5, #0x10]
	movs r0, #0x47
	strh r1, [r5, #0x00]
	strh r0, [r5, #0x02]
	ldrb r0, [r6, #0x01]
	adds r0, #0x2C
	orrs r0, r2
	strh r0, [r5, #0x04]
	strh r4, [r5, #0x06]
	str r3, [r5, #0x08]
	ldr r5, [r5, #0x10]
	ldr r0, _080572B4 @ =0x0203FFB8
	str r5, [r0, #0x38]
_08057274:
	ldr r2, _080572C0 @ =0x03000D48
	ldr r4, _080572B4 @ =0x0203FFB8
	ldr r0, [r4, #0x3C]
	ldr r3, _080572C4 @ =0x00000A14
	adds r1, r0, r3
	ldr r2, [r2, #0x00]
	bl _call_via_r2
	ldr r1, _080572C8 @ =0x03000D4C
	ldr r0, [r4, #0x3C]
	ldr r2, [r1, #0x00]
	mov r1, r10
	bl _call_via_r2
	mov r10, r0
	ldr r0, _080572B0 @ =0x0300034C
	movs r6, #0x88
	lsls r6, r6, #0x04
	adds r0, r0, r6
	mov r1, r10
	str r1, [r0, #0x00]
	add sp, #0x004
	pop {r3, r4, r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.byte 0x00, 0x00
_080572B0: .4byte 0x0300034C
_080572B4: .4byte 0x0203FFB8
_080572B8: .4byte 0x083A75B8
_080572BC: .4byte 0x083A75C8
_080572C0: .4byte 0x03000D48
_080572C4: .4byte 0x00000A14
_080572C8: .4byte 0x03000D4C
	thumb_func_start sub_80572CC
sub_80572CC:
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0x0
	adds r4, r3, #0x0
	ldr r6, [sp, #0x014]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	bl process_add
	ldr r0, _08057378 @ =0x08CDC248
	str r0, [r7, #0x18]
	adds r5, r7, #0x0
	adds r5, #0x21
	adds r0, r4, #0x0
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r5, #0x00]
	adds r0, r4, #0x0
	movs r1, #0x0A
	bl sub_81DAC14
	adds r4, r0, #0x0
	subs r5, #0x01
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r5, #0x00]
	adds r0, r4, #0x0
	movs r1, #0x0A
	bl sub_81DAC14
	adds r4, r0, #0x0
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r7, #0x1F]
	adds r0, r4, #0x0
	movs r1, #0x0A
	bl sub_81DAC14
	adds r4, r0, #0x0
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r7, #0x1E]
	adds r0, r4, #0x0
	movs r1, #0x0A
	bl sub_81DAC14
	adds r4, r0, #0x0
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r7, #0x1D]
	adds r0, r4, #0x0
	movs r1, #0x0A
	bl sub_81DAC14
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r7, #0x1C]
	adds r5, #0x02
	adds r4, r7, #0x0
	adds r4, #0x23
	adds r0, r6, #0x0
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r4, #0x00]
	adds r0, r6, #0x0
	movs r1, #0x0A
	bl sub_81DAC14
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x0A
	bl sub_81DAC8C
	strb r0, [r5, #0x00]
	adds r0, r7, #0x0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
_08057378: .4byte 0x08CDC248
	.byte 0x70, 0xB5, 0x04, 0x1C, 0x0E, 0x1C, 0x1B, 0x48, 0xA0, 0x61, 0x1B, 0x49, 0x4A, 0x89, 0x1B, 0x48
	.byte 0x10, 0x40, 0x48, 0x81, 0x4A, 0x89, 0x1A, 0x4D, 0x28, 0x1C, 0x10, 0x40, 0x48, 0x81, 0x48, 0x89
	.byte 0x02, 0x20, 0x00, 0x21, 0xC1, 0xF7, 0xEA, 0xFB, 0x20, 0x1C, 0xB8, 0x30, 0x00, 0x68, 0x00, 0x28
	.byte 0x02, 0xD0, 0x03, 0x21, 0xC2, 0xF7, 0x44, 0xFC, 0x12, 0x48, 0x00, 0x68, 0xC1, 0xF7, 0xF6, 0xFC
	.byte 0xCA, 0xF7, 0x0A, 0xFE, 0x10, 0x48, 0x05, 0x80, 0x10, 0x49, 0x4A, 0x88, 0x01, 0x20, 0x00, 0x23
	.byte 0x10, 0x43, 0x48, 0x80, 0x80, 0x20, 0x80, 0x04, 0x03, 0x80, 0x31, 0x31, 0x02, 0x20, 0x08, 0x70
	.byte 0xC0, 0xF7, 0x2A, 0xFD, 0x20, 0x1C, 0x31, 0x1C, 0xC2, 0xF7, 0x2A, 0xFC, 0x70, 0xBC, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0x38, 0xC2, 0xCD, 0x08, 0xB0, 0x00, 0x00, 0x04, 0xFF, 0xC5, 0x00, 0x00
	.byte 0xFF, 0x7F, 0x00, 0x00, 0xA0, 0x0D, 0x00, 0x03, 0x80, 0x00, 0x00, 0x02, 0x4C, 0x03, 0x00, 0x03
	thumb_func_start sub_805740C
sub_805740C:
	push {r4, r5, r6, lr}
	ldr r4, _08057444 @ =0x0300034C
	movs r0, #0x88
	lsls r0, r0, #0x04
	adds r4, r4, r0
	ldr r6, [r4, #0x00]
	bl sub_8020A78
	ldr r2, _08057448 @ =0x03000D48
	ldr r5, _0805744C @ =0x0203FFB8
	ldr r0, [r5, #0x3C]
	ldr r3, _08057450 @ =0x00000A14
	adds r1, r0, r3
	ldr r2, [r2, #0x00]
	bl _call_via_r2
	ldr r1, _08057454 @ =0x03000D4C
	ldr r0, [r5, #0x3C]
	ldr r2, [r1, #0x00]
	adds r1, r6, #0x0
	bl _call_via_r2
	adds r6, r0, #0x0
	str r6, [r4, #0x00]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.byte 0x00, 0x00
_08057444: .4byte 0x0300034C
_08057448: .4byte 0x03000D48
_0805744C: .4byte 0x0203FFB8
_08057450: .4byte 0x00000A14
_08057454: .4byte 0x03000D4C
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x08, 0x48, 0xA0, 0x61, 0xCA, 0xF7, 0xB7, 0xFD, 0xE0, 0x6B
	.byte 0x00, 0x28, 0x02, 0xD0, 0x03, 0x21, 0xC2, 0xF7, 0xE5, 0xFB, 0x20, 0x1C, 0x29, 0x1C, 0xC2, 0xF7
	.byte 0xE1, 0xFB, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x58, 0xC2, 0xCD, 0x08, 0x10, 0xB5, 0x04, 0x1C
	.byte 0x09, 0x06, 0x09, 0x0E, 0xC2, 0xF7, 0x8C, 0xFA, 0x02, 0x48, 0xA0, 0x61, 0x20, 0x1C, 0x10, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47, 0x68, 0xC2, 0xCD, 0x08, 0x02, 0x49, 0x03, 0x4A, 0x10, 0x1C, 0x08, 0x80
	.byte 0x70, 0x47, 0x00, 0x00, 0x2A, 0x01, 0x00, 0x04, 0xFE, 0xFE, 0x00, 0x00
	thumb_func_start sub_80574B4
sub_80574B4:
	push {r4, lr}
	ldr r3, _080574E8 @ =0x04000208
	movs r4, #0x00
	strh r4, [r3, #0x00]
	ldr r2, _080574EC @ =0x04000200
	ldrh r1, [r2, #0x00]
	ldr r0, _080574F0 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r2, #0x00]
	adds r2, #0x02
	ldrh r0, [r2, #0x00]
	movs r1, #0x80
	orrs r0, r1
	strh r0, [r2, #0x00]
	movs r2, #0x01
	strh r2, [r3, #0x00]
	strh r4, [r3, #0x00]
	ldr r1, _080574F4 @ =0x04000128
	ldr r4, _080574F8 @ =0x00002003
	adds r0, r4, #0x0
	strh r0, [r1, #0x00]
	strh r2, [r3, #0x00]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00, 0x00
_080574E8: .4byte 0x04000208
_080574EC: .4byte 0x04000200
_080574F0: .4byte 0x0000FF7F
_080574F4: .4byte 0x04000128
_080574F8: .4byte 0x00002003
	thumb_func_start sub_80574FC
sub_80574FC:
	push {r4, r5, lr}
	ldr r1, _0805754C @ =0x080574A1
	movs r0, #0x01
	bl sub_8018B78
	ldr r4, _08057550 @ =0x04000208
	movs r3, #0x00
	strh r3, [r4, #0x00]
	ldr r0, _08057554 @ =0x04000134
	strh r3, [r0, #0x00]
	ldr r2, _08057558 @ =0x04000128
	movs r1, #0x80
	lsls r1, r1, #0x06
	adds r0, r1, #0x0
	strh r0, [r2, #0x00]
	ldrh r0, [r2, #0x00]
	ldr r5, _0805755C @ =0x00004003
	adds r1, r5, #0x0
	orrs r0, r1
	strh r0, [r2, #0x00]
	ldr r1, _08057560 @ =0x0400012A
	ldr r2, _08057564 @ =0x0000FEFE
	adds r0, r2, #0x0
	strh r0, [r1, #0x00]
	movs r5, #0x01
	strh r5, [r4, #0x00]
	strh r3, [r4, #0x00]
	adds r1, #0xD6
	ldrh r0, [r1, #0x00]
	movs r2, #0x80
	orrs r0, r2
	strh r0, [r1, #0x00]
	adds r1, #0x02
	ldrh r0, [r1, #0x00]
	orrs r0, r2
	strh r0, [r1, #0x00]
	strh r5, [r4, #0x00]
	pop {r4, r5}
	pop {r0}
	bx r0
_0805754C: .4byte 0x080574A1
_08057550: .4byte 0x04000208
_08057554: .4byte 0x04000134
_08057558: .4byte 0x04000128
_0805755C: .4byte 0x00004003
_08057560: .4byte 0x0400012A
_08057564: .4byte 0x0000FEFE
